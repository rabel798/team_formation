{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const teamService = {\n  createTeam: async teamData => {\n    const response = await api.post('/teams/', teamData);\n    return response.data;\n  },\n  getTeams: async filters => {\n    const response = await api.get('/teams/', {\n      params: filters\n    });\n    return response.data;\n  },\n  applyToTeam: async teamId => {\n    const response = await api.post(`/teams/${teamId}/apply/`);\n    return response.data;\n  },\n  handleApplication: async (teamId, applicationId, action) => {\n    const response = await api.post(`/teams/${teamId}/handle_application/`, {\n      application_id: applicationId,\n      action\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","teamService","createTeam","teamData","response","post","data","getTeams","filters","get","params","applyToTeam","teamId","handleApplication","applicationId","action","application_id"],"sources":["D:/team_formation/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Team, Application } from '../types';\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const teamService = {\r\n    createTeam: async (teamData: Partial<Team>): Promise<Team> => {\r\n        const response = await api.post<Team>('/teams/', teamData);\r\n        return response.data;\r\n    },\r\n\r\n    getTeams: async (filters?: any): Promise<Team[]> => {\r\n        const response = await api.get<Team[]>('/teams/', { params: filters });\r\n        return response.data;\r\n    },\r\n\r\n    applyToTeam: async (teamId: number): Promise<Application> => {\r\n        const response = await api.post<Application>(`/teams/${teamId}/apply/`);\r\n        return response.data;\r\n    },\r\n\r\n    handleApplication: async (\r\n        teamId: number, \r\n        applicationId: number, \r\n        action: 'accept' | 'reject'\r\n    ): Promise<Application> => {\r\n        const response = await api.post<Application>(`/teams/${teamId}/handle_application/`, {\r\n            application_id: applicationId,\r\n            action\r\n        });\r\n        return response.data;\r\n    }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG;EACvBC,UAAU,EAAE,MAAOC,QAAuB,IAAoB;IAC1D,MAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAO,SAAS,EAAEF,QAAQ,CAAC;IAC1D,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDC,QAAQ,EAAE,MAAOC,OAAa,IAAsB;IAChD,MAAMJ,QAAQ,GAAG,MAAMP,GAAG,CAACY,GAAG,CAAS,SAAS,EAAE;MAAEC,MAAM,EAAEF;IAAQ,CAAC,CAAC;IACtE,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDK,WAAW,EAAE,MAAOC,MAAc,IAA2B;IACzD,MAAMR,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAc,UAAUO,MAAM,SAAS,CAAC;IACvE,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDO,iBAAiB,EAAE,MAAAA,CACfD,MAAc,EACdE,aAAqB,EACrBC,MAA2B,KACJ;IACvB,MAAMX,QAAQ,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAc,UAAUO,MAAM,sBAAsB,EAAE;MACjFI,cAAc,EAAEF,aAAa;MAC7BC;IACJ,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}